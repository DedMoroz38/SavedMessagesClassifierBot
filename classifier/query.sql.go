// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package classifier

import (
	"context"
)

const getFiles = `-- name: GetFiles :many
SELECT id, folder_id, location FROM files
WHERE folder_id = $1
`

func (q *Queries) GetFiles(ctx context.Context, folderID int32) ([]File, error) {
	rows, err := q.db.Query(ctx, getFiles, folderID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []File
	for rows.Next() {
		var i File
		if err := rows.Scan(&i.ID, &i.FolderID, &i.Location); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getFolders = `-- name: GetFolders :many
SELECT id, chat_id, name FROM folder
WHERE chat_id = $1
`

func (q *Queries) GetFolders(ctx context.Context, chatID interface{}) ([]Folder, error) {
	rows, err := q.db.Query(ctx, getFolders, chatID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Folder
	for rows.Next() {
		var i Folder
		if err := rows.Scan(&i.ID, &i.ChatID, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
